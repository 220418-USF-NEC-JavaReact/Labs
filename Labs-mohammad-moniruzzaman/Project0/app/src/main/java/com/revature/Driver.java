/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.revature;

import com.revature.controllers.AccountController;
import com.revature.controllers.GroceryController;
import com.revature.controllers.TransactionController;
import com.revature.controllers.UserController;
import com.revature.dao.*;
import com.revature.exceptions.PasswordIncorrectException;
import com.revature.exceptions.UsernameIncorrectException;
import com.revature.services.AccountService;
import com.revature.services.GroceryService;
import com.revature.services.TransactionService;
import com.revature.services.UserService;
import io.javalin.Javalin;
import io.javalin.http.staticfiles.Location;

import static io.javalin.apibuilder.ApiBuilder.*;

public class Driver{
    public static void main(String[] args) {

        IUserDao userDao = new UserDaoJDBC();
        UserService us = new UserService(userDao);
        UserController uc = new UserController(us);

        IAccountDao accountDao = new AccountDaoJDBC();
        AccountService as = new AccountService(accountDao);
        AccountController ac = new AccountController(as);

        ITransactionDao transactionDao = new TransactionDaoJDBC();
        IAccountDao acDao = new AccountDaoJDBC();
        TransactionService ts = new TransactionService(transactionDao, acDao);
        TransactionController tc = new TransactionController(ts);

        IGroceryDao groceryDao = new GroceryDaoJDBC();
        GroceryService groceryService = new GroceryService(groceryDao);
        GroceryController gc = new GroceryController(groceryService);


        Javalin server = Javalin.create(config ->{
            config.enableCorsForAllOrigins();
            config.addStaticFiles("/public", Location.CLASSPATH);
        });

        server.routes(() ->{
            path("user",()->{
                post("/register", uc.handleRegister);
                get("/getuser", uc.handleGetUserByUserName);
                post("/login", uc.handleLogin);
                get("/logout", uc.handleLogout);
            });
            path("account",()->{
                post("/register", ac.handleAccountRegister);
                get("/getaccount", ac.handleGetAccountById);
                get("/allaccounts", ac.handleGetAllAccount);
                put("/update", ac.handleAccountUpdate);
            });
            path("transaction",()->{
                post("/transactionlist", tc.handleTransactionList);
                post("/deposit", tc.handleDeposit);
                post("/withdraw", tc.handleWithdraw);
                post("/transfer", tc.handleTransfer);
            });
            path("grocery",()->{
                get("/", gc.handleGetItems);
                post("/add", gc.handleAddItem);
            });
        });

        server.exception(UsernameIncorrectException.class, (e, ctx)->{
            ctx.result(e.getMessage());
        });

        server.exception(PasswordIncorrectException.class, (e, ctx)->{
            ctx.result(e.getMessage());
        });

        server.start(8000);
    }
}
